YUM Command :(Yellowdog Updater Modified)


Developed and released by Seth Vidal under GPL (General Public Licence)
The yum command is replaced by the dnf command,which is a next-generation version of yum and considered to be the replacement for YUM in most newer RPM-based distributions.


YUM Command
	(Yellowdog Updater Modified)
	1. Install a Package with YUM
	# yum -y install firefox
	2. Removing a Package with YUM
	# yum -y remove firefox
	3. Updating a Package using YUM
	# yum update mysql
	4. List a Package using YUM
	# yum list openssh
	5. Search for a Package using YUM
	# yum search vsftpd
	6. Get Information about a Package using YUM
	# yum info firefox
	7. List all Available Packages using YUM
	# yum list | less
	8. List all Installed Packages using YUM
	# yum list installed | less
	9. Yum Provides Function
	# yum provides /etc/httpd/conf/httpd.conf
	10. Check for Available Updates using Yum
	# yum check-update
	11. Update System using Yum
	# yum update
	12. List all available Group Packages
	# yum grouplist
	13. Install Group Packages
	# yum groupinstall 'MySQL Database'
	14. Update a Group Packages
	# yum groupupdate 'DNS Name Server'
	15. Remove Group Packages
	# yum groupremove 'DNS Name Server'
	16. List Enabled Yum Repositories
	# yum repolist
	16. List all Enabled and Disabled Yum Repositories
	# yum repolist all
	17. Install a Package from a Specific Repository
	# yum --enablerepo=epel install phpmyadmin
	18. Interactive Yum Shell
	# yum shell
	19. Clean Yum Cache
	# yum clean all
	20. View History of Yum
	# yum history
	





RPM Command :


Some Facts about RPM (RedHat Package Manager)
1. RPM is free and released under GPL (General Public Licence).
2. RPM keeps the information of all the installed packages under /var/lib/rpm database.
3. RPM is the only way to install packages under Linux systems, if you’ve installed packages using source code, then rpm won’t manage it.
4. RPM deals with .rpm files, which contains the actual information about the packages such as: what it is, from where it comes, dependencies info, version info etc.
There are five basic modes for RPM command
1. Install : It is used to install any RPM package.
2. Remove : It is used to erase, remove or uninstall any RPM package.
3. Upgrade : It is used to update the existing RPM package.
4. Verify : It is used to verify RPM packages.
5. Query : It is used to query any RPM package.
Where to find RPM packages
Below is the list of rpm sites, where you can find and download all RPM packages.
1. http://rpmfind.net
2. http://www.redhat.com
3. http://freshrpms.net/
4. http://rpm.pbone.net/
Please remember you must be root user when installing packages in Linux




1. How to Check an RPM Signature Package
Always check the PGP signature of packages before installing them on your Linux systems and make sure its integrity and origin is OK. Use the following command with –checksig (check signature) option to check the signature of a package called pidgin.


# rpm --checksig pidgin-2.7.9-5.el6.2.i686.rpm


2. How to Install an RPM Package
For installing an rpm software package, use the following command with -i option. For example, to install an rpm package called pidgin-2.7.9-5.el6.2.i686.rpm.


# rpm -ivh pidgin-2.7.9-5.el6.2.i686.rpm


RPM command and options
1. -i : install a package
2. -v : verbose for a nicer display
3. -h: print hash marks as the package archive is unpacked.
3. How to check dependencies of RPM Package before Installing
To do a dependency check before installing or upgrading a package


# rpm -qpR BitTorrent-5.2.2-1-Python2.4.noarch.rpm


RPM command and options
1. -q : Query a package
2. -p : List capabilities this package provides.
3. -R: List capabilities on which this package depends..
4. How to Install a RPM Package Without Dependencies




If you know that all needed packages are already installed and RPM is just being stupid, you can ignore those dependencies by using the option –nodeps (no dependencies check) before installing the package.


# rpm -ivh --nodeps BitTorrent-5.2.2-1-Python2.4.noarch.rpm


The above command forcefully install rpm package by ignoring dependencies errors, but if those dependency files are missing, then the program will not work at all, until you install them.










5. How to check an Installed RPM Package
Using -q option with package name, will show whether an rpm installed or not.


# rpm -q BitTorrent


6. How to List all files of an installed RPM package


To view all the files of an installed rpm packages, use the -ql (query list) with rpm command.


# rpm -ql BitTorrent


7. How to List Recently Installed RPM Packages
Use the following rpm command with -qa (query all) option, will list all the recently installed rpm packages.


# rpm -qa --last


8. How to List All Installed RPM Packages
Type the following command to print the all the names of installed packages on your Linux system.


# rpm -qa


9. How to Upgrade a RPM Package
If we want to upgrade any RPM package “–U” (upgrade) option will be used. One of the major advantages of using this option is that it will not only upgrade the latest version of any package, but it will also maintain the backup of the older package so that in case if the newer upgraded package does not run the previously installed package can be used again.


# rpm -Uvh nx-3.5.0-2.el6.centos.i686.rpm


10. How to Remove a RPM Package
To un-install an RPM package, for example we use the package name nx, not the original package name nx-3.5.0-2.el6.centos.i686.rpm. The -e (erase) option is used to remove package.


# rpm -evv nx


11. How to Remove an RPM Package Without Dependencies


The –nodeps (Do not check dependencies) option forcefully remove the rpm package from the system. But keep in mind removing particular package may break other working applications.


# rpm -ev --nodeps vsftpd


12. How to Query a file that belongs which RPM Package


Let’s say, you have list of files and you would like to find out which package belongs to these files. For example, the following command with -qf (query file) option will show you a file /usr/bin/htpasswd is own by package httpd-tools-2.2.15-15.el6.centos.1.i686.


# rpm -qf /usr/bin/htpasswd




13. How to Query a Information of Installed RPM Package
Let’s say you have installed an rpm package and want to know the information about the package. The following -qi (query info) option will print the available information of the installed package.


# rpm -qi vsftpd




14. Get the Information of RPM Package Before Installing
You have download a package from the internet and want to know the information of a package before installing. For example, the following option -qip (query info package) will print the information of a package sqlbuddy.


# rpm -qip sqlbuddy-1.3.3-1.noarch.rpm




15. How to Query documentation of Installed RPM Package
To get the list of available documentation of an installed package, use the following command with option -qdf (query document file) will display the manual pages related to vmstat package.




# rpm -qdf /usr/bin/vmstat




16. How to Verify a RPM Package
Verifying a package compares information of installed files of the package against the rpm database. The -Vp (verify package) is used to verify a package.


# rpm -Vp sqlbuddy-1.3.3-1.noarch.rpm
17. How to Verify all RPM Packages
Type the following command to verify all the installed rpm packages.


# rpm -Va


18. How to Import an RPM GPG key
To verify RHEL/CentOS/Fedora packages, you must import the GPG key. To do so, execute the following command. It will import CentOS 6 GPG key.


# rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6


19. How to List all Imported RPM GPG keys
To print all the imported GPG keys in your system, use the following command.


# rpm -qa gpg-pubkey*


20. How To rebuild Corrupted RPM Database
Sometimes rpm database gets corrupted and stops all the functionality of rpm and other applications on the system. So, at the time we need to rebuild the rpm database and restore it with the help of following command.


# cd /var/lib
# rm __db*
# rpm --rebuilddb
# rpmdb_verify Packages